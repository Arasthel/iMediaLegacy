/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */


struct _NSPoint {
    float x;
    float y;
};

struct _NSSize {
    float width;
    float height;
};

struct _NSRect {
    struct _NSPoint origin;
    struct _NSSize size;
};


@protocol IKImageProxy <NSObject>
- (void)bind;
- (void)unbind;
- (BOOL)isBinded;
- (int)proxyDataFormat;
- (id)proxyData;
- (void)disconnect;
- (void)connect:(id)fp8;
- (id)image;
- (id)thumbnailWithSize:(struct _NSSize)fp8 antialiased:(BOOL)fp16 qualityRequested:(int)fp20 qualityProduced:(int *)fp24;
- (BOOL)isVectorial;
- (struct _NSSize)proxySize;
- (void)lockForThreadedOperation;
- (void)unlockForThreadedOperation;
- (BOOL)isLockedForThreadedOperation;
@end


@interface IKImageWrapper : NSObject
{
    NSString *_path;
    NSData *_dataRepresentation;
    NSBitmapImageRep *_bitmapRepresentation;
    id <IKImageProxy> _imageProxy;
    union {
        struct CGImage *_cgImage;
        CIImage *_ciImage;
        struct CGImageSource *_cgImageSource;
        NSImage *_nsImage;
    } _volatileRep;
    unsigned short _volatileRepresentation;
    unsigned int _exifOrientation:3;
    unsigned int _generatedWithIconServices:1;
    unsigned int _underlyingDataAreVolatile:1;
    unsigned int _isReference:1;
    struct _NSSize _cachedSize;
    NSDictionary *_info;
}

+ (id)imageWithPath:(id)fp8;
+ (id)imageWithNSImage:(id)fp8;
+ (id)imageWithCGImage:(struct CGImage *)fp8;
+ (id)imageWithCGImageSource:(struct CGImageSource *)fp8;
+ (id)imageWithData:(id)fp8;
+ (id)imageWithPasteboard:(id)fp8;
+ (id)imageWithNSBitmapImageRep:(id)fp8;
+ (id)emptyImage;
+ (id)imageWithSize:(struct _NSSize)fp8;
+ (id)imageWithImageProxy:(id)fp8;
+ (id)imageWithObject:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (id)initWithPath:(id)fp8;
- (id)initWithCGImage:(struct CGImage *)fp8;
- (id)initWithCGImageSource:(struct CGImageSource *)fp8;
- (id)initWithNSImage:(id)fp8;
- (id)initEmptyImage;
- (id)initWithPasteboard:(id)fp8;
- (id)initWithSize:(struct _NSSize)fp8;
- (id)initWithData:(id)fp8;
- (id)initWithNSBitmapImageRep:(id)fp8;
- (id)initWithImageProxy:(id)fp8;
- (id)initWithOpenGLID:(unsigned int)fp8 size:(struct _NSSize)fp12 offset:(struct _NSPoint)fp20 premultiplied:(BOOL)fp28 deleteWhenDone:(BOOL)fp32;
- (int)volatileRepresentation;
- (void)setVolatileRepresentation:(int)fp8;
- (void)releaseVolatileImageRep;
- (unsigned short)flags;
- (void)setFlags:(unsigned short)fp8;
- (BOOL)wasGeneratedWithIconServices;
- (void)setWasGeneratedWithIconServices:(BOOL)fp8;
- (BOOL)underlyingDataAreVolatile;
- (void)setUnderlyingDataAreVolatile:(BOOL)fp8;
- (struct CGImage *)_cgImage;
- (id)_nsImage;
- (struct CGImage *)cgImage;
- (id)nsImage:(BOOL)fp8;
- (id)nsImage;
- (struct CGImageSource *)cgImageSourceRef:(BOOL)fp8;
- (void)setCGImageSource:(struct CGImageSource *)fp8;
- (void)setCGImage:(struct CGImage *)fp8;
- (void)setNSImage:(id)fp8;
- (id)copy;
- (void)setIsReference:(BOOL)fp8;
- (void)integrateReferenceInstance:(id)fp8;
- (void)referenceWillDie;
- (id)referenceInstance;
- (id)_thumbnailWithSize:(struct _NSSize)fp8 antialiased:(BOOL)fp16 qualityRequested:(int)fp20 qualityProduced:(int *)fp24;
- (id)thumbnailWithSize:(struct _NSSize)fp8 antialiased:(BOOL)fp16 qualityRequested:(int)fp20 qualityProduced:(int *)fp24;
- (struct _NSSize)cachedSize;
- (id)_sizeOfNSImage:(id)fp8;
- (struct _NSSize)_size;
- (struct _NSSize)size;
- (void)setSize:(struct _NSSize)fp8;
- (void)setSizeWithoutSavingContent:(struct _NSSize)fp8;
- (BOOL)isVectorial;
- (BOOL)isValid;
- (BOOL)isEmpty;
- (BOOL)hasAlpha;
- (id)animatedGifsCache;
- (BOOL)isAnimatedGifs;
- (int)imageFrameCount;
- (int)loopCount;
- (float)nextFrameDelayAtIndex:(int)fp8;
- (struct CGImage *)imageAtFrameIndex:(int)fp8;
- (id)GIFRepresentation;
- (id)TIFFRepresentation;
- (id)TIFFRepresentationUsingCompression:(unsigned int)fp8 factor:(float)fp12;
- (id)IK_JPEGRepresentationWithCompressionFactor:(float)fp8;
- (id)imagePath;
- (id)_dataRepresentationFromBitmapRepresentation:(id)fp8;
- (id)_createBitmapImageRepFromCGRepresentation;
- (id)dataRepresentationFromCGRepresentationWithCompressionFactor:(float)fp8;
- (id)dataRepresentation;
- (id)imageProxy;
- (void)setImageProxy:(id)fp8;
- (void)setPath:(id)fp8;
- (void)setDataRepresentation:(id)fp8;
- (void)drawInRect:(struct _NSRect)fp8 fromRect:(struct _NSRect)fp24 alpha:(float)fp40;
- (void)lockFocus;
- (void)unlockFocus;
- (void)saveAsTIFFAtPath:(id)fp8;
- (void)saveAsJPGAtPath:(id)fp8;
- (id)writeToFileWithAutomaticFormat:(id)fp8;
- (BOOL)hasDataRepresentation;
- (BOOL)hasBitmapRepresentation;
- (id)bitmapRepresentation;
- (void)setBitmapRepresentation:(id)fp8;
- (struct CGContext *)cgContext;
- (void)mapIntoVRAM;
- (void)mapRepresentationIntoRAM:(int)fp8;
- (BOOL)mappedIntoRAM;
- (BOOL)mappedAndDecompressedIntoRAM;
- (BOOL)mappedIntoVRAM;
- (void)freeImageCache;
- (void)bindCGCache;
- (BOOL)hasCGCache;
- (BOOL)hasVolatileCache;
- (BOOL)hasRAMCache;
- (void)freeRAMCache;
- (void)freeVRAMCache;
- (void)freeCache;
- (BOOL)textureIsPacked;
- (unsigned int)openGLTextureID;
- (void)deleteTextureInCurrentContext;
- (void)setOpenGLTextureID:(unsigned int)fp8 withGLContext:(id)fp12;
- (unsigned int)generateNewGLTextureID;
- (struct _NSPoint)openGLTextureOffset;
- (void)setOpenGLTextureOffset:(struct _NSPoint)fp8;
- (BOOL)openGLTextureIsPremultiplied;
- (void)setOpenGLTextureIsPremultiplied:(BOOL)fp8;
- (void)setValue:(id)fp8 forKey:(id)fp12;
- (id)valueForKey:(id)fp8;
- (id)_tryToCreateCGImageRepFromNonCGFile:(id)fp8;
- (id)description;

@end


@class IKMipmapItem;

@interface IKMipmapImage : NSObject
{
    IKMipmapItem *_mipmaps[4];
    IKMipmapItem *_originalMipmap;
    IKMipmapItem *_customMipmap;
    unsigned long _version;
    struct _NSSize _originalImageSizeCache;
    unsigned int _originalImageIsInvalid:1;
    unsigned int _dirty:1;
    unsigned int _mark:1;
    unsigned int _isReference:1;
}

- (void)_mipmapCommonInit;
- (id)init;
- (id)initWithMipmapSizes:(id)fp8 VMUsagePolicy:(id)fp12;
- (void)_cleanUp;
- (void)dealloc;
- (void)finalize;
- (BOOL)isDirty;
- (void)setDirty:(BOOL)fp8;
- (void)setIsReference:(BOOL)fp8;
- (void)setOriginalImageIsInvalid:(BOOL)fp8;
- (unsigned long)version;
- (void)setVersion:(unsigned long)fp8;
- (BOOL)marked;
- (void)mark;
- (void)clearMark;
- (id)temporaryItem;
- (id)originalItem;
- (id)mipmapItemAtIndex:(int)fp8;
- (int)indexOfMipmapItem:(id)fp8;
- (int)highestMipmapItemIndex;
- (id)highestMipmapItem;
- (float)originalAspectRatio;
- (BOOL)originalImageIsInvalid;
- (void)checkAndMarkMipmapAsInvalid;
- (void)invalidateOriginalImageSizeCache;
- (struct _NSSize)originalImageSize;
- (void)setOriginalImageSizeCache:(struct _NSSize)fp8;
- (struct _NSSize)originalImageSizeCache;
- (id)image;
- (void)setImage:(id)fp8;
- (void)setImageWithoutInvalidate:(id)fp8;
- (id *)mipmapItems;
- (id)validMipmapItems;
- (BOOL)atLeastOneMipmapItemIsValid;
- (BOOL)allMipmapItemsAreValid;
- (BOOL)customMipmapIsValidAndMatchSize:(struct _NSSize)fp8 andQuality:(int)fp16;
- (BOOL)validateMipmap:(id)fp8 withModel:(id)fp12 withQuality:(int)fp16;
- (BOOL)validateMipmap:(id)fp8 withQuality:(int)fp12;
- (BOOL)validateMipmapAtIndex:(int)fp8 withQuality:(int)fp12;
- (int)bestMipmapIndexToValidateForSize:(int)fp8;
- (id)mipmapWithSize:(int)fp8;
- (void)setImage:(id)fp8 forMipmapSize:(int)fp12;
- (id)fastMipmapItemForSize:(int)fp8 forOpenGL:(BOOL)fp12 useMinimumQualityThreshold:(BOOL)fp16;
- (id)_fastMipmapItemForSize:(struct _NSSize)fp8 forOpenGL:(BOOL)fp16 useMinimumQualityThreshold:(BOOL)fp20;
- (id)fastMipmapItemForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16;
- (id)fastestMipmapItemForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16;
- (void)_cacheMipmapSize:(struct _NSSize)fp8 fromModel:(id)fp16;
- (id)nicestMipmapItemForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16 cacheIt:(BOOL)fp20;
- (BOOL)shouldUseOriginalImageToCacheNiceImageWithSize:(struct _NSSize)fp8;
- (id)niceMipmapItemForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16 cacheIt:(BOOL)fp20;
- (id)fastMipmapItemWithExactSize:(struct _NSSize)fp8;
- (id)nicestImageForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16 cacheIt:(BOOL)fp20;
- (id)niceImageForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16 cacheIt:(BOOL)fp20;
- (id)fastImageForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16;
- (id)fastestImageForSize:(struct _NSSize)fp8 forGLRendering:(BOOL)fp16;
- (id)lockMipmapAtIndex:(int)fp8;
- (void)unlockMipmapItem:(id)fp8;
- (BOOL)preloadMipmapsWithQuality:(int)fp8;
- (BOOL)containsMipmapItem:(id)fp8;
- (void)freeAllCaches;
- (void)freeTemporaryCache;
- (void)freeExpendedRepresentationCaches;
- (void)freeOriginalImageCache;
- (void)invalidateMipMaps;
- (void)setMipmapSizes:(id)fp8;
- (void)setMipmapVMUsagePolicy:(id)fp8;
- (id)referenceInstance;
- (void)integrateReferenceInstance:(id)fp8;
- (void)referenceWillDie;

@end


@interface IKMipmapItem : NSObject
{
    IKMipmapImage *_parent;
    IKImageWrapper *_image;
    int _mipmapSize;
    unsigned int _vmUsagePolicy:8;
    unsigned int _thumbnailQuality:8;
    unsigned int _isReference:1;
}

- (id)init;
- (void)dealloc;
- (id)description;
- (id)parent;
- (void)setParent:(id)fp8;
- (BOOL)loaded;
- (void)mapIntoVRAM;
- (BOOL)unload;
- (BOOL)isValid;
- (int)thumbnailQuality;
- (void)setThumbnailQuality:(int)fp8;
- (id)__image;
- (id)image;
- (void)setImage:(id)fp8;
- (void)setMipmapSize:(int)fp8;
- (void)invalidate;
- (int)mipmapSize;
- (void)__setDictionaryRepresentation:(id)fp8;
- (BOOL)setAsMipmapOfImage:(id)fp8 withSize:(struct _NSSize)fp12 antialiased:(BOOL)fp20 quality:(int)fp24;
- (BOOL)setAsMipmapOfImage:(id)fp8 aspectRatio:(float)fp12 antialiased:(BOOL)fp16 quality:(int)fp20;
- (int)vmUsagePolicy;
- (void)setVmUsagePolicy:(int)fp8;
- (void)setIsReference:(BOOL)fp8;
- (void)setAsReferenceOf:(id)fp8;
- (void)integrateReferenceInstance:(id)fp8 replaceImage:(BOOL)fp12;
- (void)referenceWillDie;

@end


@interface IKImageCell : NSObject
{
    id _parent;
    id _cellSource;
    id _proxy;
    unsigned int _dataSourceIndex;
    unsigned int _mipmapDBIndex;
    IKMipmapImage *_mipmapImage;
    unsigned int _datasourceIsVectorial:1;
    float _alpha;
    NSMutableDictionary *_properties;
}

+ (id)_IKBuildImageWrapperForType:(id)fp8 withObject:(id)fp12 withOwner:(id)fp16;
- (id)init;
- (struct _NSRect)imageFrame;
- (void)invalidate;
- (void)validate;
- (void)mipmapImageChanged;
- (void)validateMipmapDBIndex;
- (id)mipmapDB;
- (unsigned int)mipmapDBIndex;
- (void)setCacheDBIndex:(unsigned int)fp8;
- (void)parentWillDie:(id)fp8;
- (void)dealloc;
- (void)finalize;
- (void)setParent:(id)fp8;
- (id)parent;
- (void)setDataSource:(id)fp8;
- (id)dataSource;
- (unsigned int)dataSourceIndex;
- (void)setDataSourceIndex:(unsigned int)fp8;
- (id)mipmapImage;
- (void)setMipmapImage:(id)fp8;
- (float)alpha;
- (void)setAlpha:(float)fp8;
- (BOOL)isAnIcon;
- (BOOL)_representationTypeCanBePlayed:(id)fp8;
- (void)removeObjectForKey:(id)fp8;
- (void)setObject:(id)fp8 forKey:(id)fp12;
- (id)objectForKey:(id)fp8;
- (void)checkMipmapVersion;
- (id)dataSourcePath;

@end


@interface IKImageBrowserCell : IKImageCell
{
    unsigned int _hidden:1;
    unsigned int _reordering:1;
    unsigned int _selected:1;
    struct _NSRect _frame;
    struct _NSRect _imageFrame;
    unsigned int _layoutValid:1;
    unsigned int _imageFrameValid:1;
    float _aspectRatio;
    unsigned int _aspectRatioValid:1;
    struct _NSSize _titleSize;
    unsigned int _mipmapImageValid:1;
    unsigned int _imageValid:1;
    unsigned int _contentCanBePlayed:1;
    unsigned int _privateAnimationMask:1;
}

+ (void)stopCurrentPlayerIfAny;
+ (BOOL)aCellIsPlayingInView:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)finalize;
- (void)invalidate;
- (void)validate;
- (id)originalImage;
- (id)sourceUID;
- (float)_aspectRatio;
- (float)aspectRatio;
- (void)setAspectRatio:(float)fp8;
- (int)heightOfInfoSpace;
- (BOOL)hasPreview;
- (struct _NSRect)roundedFrame;
- (struct _NSSize)imageSizeForCellSize:(struct _NSSize)fp8 withAspectRatio:(float)fp16;
- (struct _NSRect)imageFrameForCellFrame:(struct _NSRect)fp8;
- (void)_computeImageFrame;
- (void)setPosition:(struct _NSPoint)fp8;
- (void)setSize:(struct _NSSize)fp8;
- (void)setFrame:(struct _NSRect)fp8;
- (struct _NSPoint)position;
- (void)centerToPosition:(struct _NSPoint)fp8;
- (struct _NSRect)frame;
- (struct _NSRect)imageFrame;
- (struct _NSRect)imageBorderFrame;
- (BOOL)isLayoutValid;
- (void)setLayoutValid:(BOOL)fp8;
- (BOOL)hitTestWithPoint:(struct _NSPoint)fp8;
- (BOOL)hitTestWithRect:(struct _NSRect)fp8;
- (id)typeSelectString;
- (void)validateMipmapImage;
- (void)validateMipmapDBIndex;
- (void)validateImage;
- (void)reloadData;
- (void)prepareForImport;
- (void)didImport;
- (struct _NSRect)_iconFrameForCellFrameSize:(struct _NSSize)fp8;
- (struct _NSSize)size;
- (BOOL)isSelected;
- (BOOL)isSelectable;
- (void)setSelected:(BOOL)fp8;
- (void)drawOverlays;
- (void)positionDidChange;
- (void)sizeDidChange;
- (void)willBeRemovedFromView;
- (BOOL)imageIsImported;
- (BOOL)needLoading;
- (BOOL)_preloadWithQuality:(int)fp8;
- (void)_preloadingEnded;
- (BOOL)preloadWithQuality:(int)fp8;
- (BOOL)preload;
- (id)bestMipmapForSize:(struct _NSSize)fp8;
- (id)thumbnailImage;
- (void)mipmapImageChanged;
- (void)drawShadow;
- (void)drawImageOutline;
- (void)drawPlaceHolder;
- (void)drawBackground;
- (void)drawCenteredIcon:(id)fp8;
- (struct _NSRect)playButtonFrame;
- (BOOL)_playerViewHasPlayControls;
- (void)drawPlayerControl;
- (void)drawImage:(id)fp8;
- (struct _NSSize)_getTitleSize;
- (id)_currentTitleAttributes;
- (struct _NSRect)titleFrame;
- (struct _NSRect)titleStringFrame;
- (void)drawSelectionOnTitle;
- (void)drawTitleBackground;
- (void)drawTitle;
- (struct _NSRect)subtitleFrame;
- (void)drawSubtitle;
- (struct _NSRect)selectionFrame;
- (void)drawSelection;
- (void)drawDragHighlight;
- (void)draw;
- (void)freeOriginalImageCache;
- (void)freeVMCache;
- (void)freeExpendedRepresentationCaches;
- (BOOL)showPlayerControls;
- (id)playerView;
- (BOOL)contentCanBePlayed;
- (struct _NSRect)playerFrame;
- (void)stopPlay;
- (void)startPlay;
- (BOOL)isPlaying;
- (id)browser;
- (void)setBrowser:(id)fp8;
- (BOOL)hidden;
- (void)setHidden:(BOOL)fp8;
- (BOOL)reordering;
- (void)setReordering:(BOOL)fp8;
- (unsigned int)privateAnimationMask;
- (void)setPrivateAnimationMask:(unsigned int)fp8;
- (BOOL)mouseDown:(struct _NSPoint)fp8 inView:(id)fp16;
- (unsigned long long)fileSize;
- (void)installToolTips;

@end


@interface IKImageCellDatasourceProxy : NSObject <IKImageProxy>
{
    id _proxySource;
    unsigned int _datasourceIsVectorial:1;
    unsigned int _datasourceIsVectorialCacheValid:1;
    unsigned int _quicklookFails:1;
    int _connectCount;
}

- (id)init;
- (void)dealloc;
- (id)proxySource;
- (void)setProxySource:(id)fp8;
- (id)_datasourceImageRepresentationType;
- (id)_datasourceImageRepresentation;
- (void)bind;
- (void)unbind;
- (BOOL)isBinded;
- (void)lockForThreadedOperation;
- (void)unlockForThreadedOperation;
- (BOOL)isLockedForThreadedOperation;
- (int)proxyDataFormat;
- (BOOL)holesFlavor;
- (id)proxyData;
- (void)disconnect;
- (void)connect:(id)fp8;
- (struct _NSSize)proxySize;
- (BOOL)isVectorial;
- (id)image;
- (id)_createQLThumbnailOptions;
- (id)thumbnailWithSize:(struct _NSSize)fp8 antialiased:(BOOL)fp16 qualityRequested:(int)fp20 qualityProduced:(int *)fp24;

@end


@interface IKImageBrowserView : NSView
{
    id _dataSource;
    id _dragDestinationDelegate;
    NSScroller *_verticalScroller;
    NSScroller *_horizontalScroller;
    id _delegate;
    void *_reserved;
}

+ (id)IKStringFromSize:(long long)fp8;
+ (id)requiredOpenGLExtensions;
- (void)_ikCommonInit;
- (id)initWithFrame:(struct _NSRect)fp8;
- (void)dealloc;
- (void)finalize;
- (void)_willInitWithCoder;
- (id)initWithCoder:(id)fp8;
- (void)encodeWithCoder:(id)fp8;
- (void)awakeFromNib;
- (void)setWantsLayer:(BOOL)fp8;
- (void)setDisplayLoadingFrame:(BOOL)fp8;
- (id)cacheManager;
- (void)setCacheManager:(id)fp8;
- (void)_cacheWasFlushed:(id)fp8;
- (BOOL)animates;
- (void)setAnimates:(BOOL)fp8;
- (id)horizontalScroller;
- (id)verticalScroller;
- (void)setHorizontalScroller:(id)fp8;
- (void)setVerticalScroller:(id)fp8;
- (void)setDataSource:(id)fp8;
- (id)dataSource;
- (void)setKVOContent:(id)fp8;
- (id)kvoContent;
- (id)cells;
- (id)grid;
- (id)layoutManager;
- (BOOL)allowsReordering;
- (void)setAllowsReordering:(BOOL)fp8;
- (BOOL)allowsDropOnItems;
- (void)setAllowsDropOnItems:(BOOL)fp8;
- (BOOL)automaticallyHideReorderedItems;
- (void)setAutomaticallyHideReorderedItems:(BOOL)fp8;
- (unsigned int)indexAtLocationOfDroppedItem;
- (BOOL)_convertColor:(id)fp8 toRed:(float *)fp12 green:(float *)fp16 blue:(float *)fp20 alpha:(float *)fp24;
- (BOOL)backgroundIsDark;
- (void)_setBackgroundColorWithRed:(float)fp8 green:(float)fp12 blue:(float)fp16 alpha:(float)fp20;
- (void)_setSelectionColorRed:(float)fp8 green:(float)fp12 blue:(float)fp16;
- (void)_setCellsOutlineColorRed:(float)fp8 green:(float)fp12 blue:(float)fp16;
- (void)setBackgroundColor:(id)fp8;
- (void)setSelectionColor:(id)fp8;
- (void)setCellsOutlineColor:(id)fp8;
- (BOOL)shadowsCells;
- (void)setShadowsCells:(BOOL)fp8;
- (BOOL)outlinesCells;
- (void)setOutlinesCells:(BOOL)fp8;
- (void)_adjustGridRowMargin;
- (BOOL)cellsHaveTitle;
- (void)setCellsHaveTitle:(BOOL)fp8;
- (BOOL)cellsHaveSubtitle;
- (void)setCellsHaveSubtitle:(BOOL)fp8;
- (void)_setDefaultTextAttributes;
- (int)appearanceStyle;
- (void)setAppearanceStyle:(int)fp8;
- (void)setCellsStyleMask:(unsigned int)fp8;
- (unsigned int)cellsStyleMask;
- (id)loadingString;
- (void)setLoadingString:(id)fp8;
- (int)loadingFeedbackType;
- (void)setLoadingFeedbackType:(int)fp8;
- (BOOL)constrainsToOriginalSize;
- (void)setConstrainsToOriginalSize:(BOOL)fp8;
- (id)lastDiff;
- (float)scaleFactor;
- (void)setBackgroundImage:(id)fp8;
- (id)backgroundIKImage;
- (void)_onQCTimer;
- (void)setBackgroundComposition:(id)fp8;
- (id)backgroundComposition;
- (void)setCellClass:(Class)fp8;
- (Class)cellClass;
- (void)initializeNewItem:(id)fp8;
- (id)allocateNewCell;
- (float)loadingProgressValue;
- (void)setLoadingProgressValue:(float)fp8;
- (void)execLoading;
- (void)_closeLoading:(id)fp8;
- (void)stopLoading;
- (void)preloadCells:(BOOL)fp8;
- (BOOL)loading;
- (id)delegate;
- (void)setDelegate:(id)fp8;
- (void)zoomValueDidChange;
- (struct _NSSize)cellSize;
- (void)setCellSize:(struct _NSSize)fp8;
- (void)setImageBoundingBoxSize:(struct _NSSize)fp8;
- (struct _NSSize)imageBoundingBoxSize;
- (void)setZoomValue:(float)fp8;
- (float)zoomValue;
- (BOOL)maximizedMode;
- (void)setMaximizedMode:(BOOL)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)remove:(id)fp8;
- (void)copy:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)paste:(id)fp8;
- (void)cut:(id)fp8;
- (void)duplicate:(id)fp8;
- (void)openWithApplication:(id)fp8;
- (void)openWithFinder:(id)fp8;
- (void)revealInFinder:(id)fp8;
- (BOOL)backBufferIsValid;
- (id)defaultStringForStatusWithFileWeight:(BOOL)fp8;
- (id)thumbnailImageAtIndex:(int)fp8;
- (void)registerToNotifications;
- (void)applicationWillTerminate:(id)fp8;
- (void)_focusDidChange:(id)fp8;
- (id)imageBrowserContext;
- (void)setImageBrowserContext:(id)fp8;
- (void)openGLStateDidChange;
- (void)_enclosingClipViewDidChange:(id)fp8;
- (id)enclosingClipView;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (void)viewDidHide;
- (void)setValue:(id)fp8 forUndefinedKey:(id)fp12;
- (id)valueForUndefinedKey:(id)fp8;

@end


